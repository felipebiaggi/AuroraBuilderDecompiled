<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Aurora.Presentation.Controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/colors.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Aurora.Presentation;component/Styles/Colors.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Aurora.Presentation;component/Styles/Theme/AuroraLight.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <converters:ToUpperConverter x:Key="ToUpperConverter" xmlns:converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro" />
    <Style x:Key="AuroraGraphicsButtonTitleTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource AuroraLightBrush}"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        <Setter Property="TextBlock.FontFamily" Value="Segoe UI SemiBold"/>
        <Setter Property="TextBlock.FontSize" Value="16"/>
        <Setter Property="UIElement.Opacity" Value="0.8"/>
    </Style>
    <Style x:Key="AuroraGraphicsButtonDescriptionTextBlock" TargetType="{x:Type TextBlock}"
         BasedOn="{StaticResource AuroraGraphicsButtonTitleTextBlock}">
        <Setter Property="TextBlock.FontFamily" Value="Segoe UI Light"/>
        <Setter Property="TextBlock.FontSize" Value="10"/>
        <Setter Property="UIElement.Opacity" Value=".8"/>
    </Style>
    <Storyboard x:Key="MouseOver">
        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                    From="{StaticResource DarkColor3}" To="{StaticResource AuroraBorealisColor}" Duration="0:0:0.30"/>
    </Storyboard>
    <Style x:Key="CommandButtonDefaultStyle" TargetType="{x:Type controls:CommandButton}">
        <Setter Property="Control.Background" Value="{DynamicResource LightColor1Brush}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Aurora.Brushes.Text.Primary}"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource LightColor3Brush}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Padding" Value="5,1"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.FontFamily" Value="Segoe UI SemiBold"/>
        <Setter Property="Control.FontSize" Value="11"/>
        <Setter Property="FrameworkElement.MinWidth" Value="26"/>
        <Setter Property="FrameworkElement.Height" Value="26"/>
        <Setter Property="controls:CommandButton.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="controls:CommandButton.CommandTextVisibility" Value="Visible"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CommandButton}">
                    <Border x:Name="PART_Border" CornerRadius="{TemplateBinding controls:CommandButton.CornerRadius}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                  Padding="{TemplateBinding Control.Padding}">
                        <Grid Background="{TemplateBinding Control.Background}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0">
                                <ContentPresenter x:Name="PART_Content" Content="{TemplateBinding ContentControl.Content}"
                                  IsEnabled="{TemplateBinding UIElement.IsEnabled}" HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                <TextBlock x:Name="PART_Text" Text="{TemplateBinding controls:CommandButton.CommandText}"
                           FontSize="{TemplateBinding Control.FontSize}" Foreground="{TemplateBinding Control.Foreground}"
                           Margin="6,0,0,0" VerticalAlignment="Center"
                           Visibility="{TemplateBinding controls:CommandButton.CommandTextVisibility}"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Value="{x:Null}" Property="controls:CommandButton.CommandText">
                            <Setter TargetName="PART_Text" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="controls:CommandButton.CommandText" Value="">
                            <Setter TargetName="PART_Text" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ContentControl.Content" Value="">
                            <Setter TargetName="PART_Text" Property="FrameworkElement.Margin" Value="0,0,0,1"/>
                        </Trigger>
                        <Trigger Value="{x:Null}" Property="ContentControl.Content">
                            <Setter TargetName="PART_Text" Property="FrameworkElement.Margin" Value="0,0,0,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Property="UIElement.Opacity" Value=".5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="{DynamicResource LightColor2Brush}"/>
                <Setter Property="Control.BorderBrush" Value="{DynamicResource LightColor4Brush}"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Control.Background" Value="{DynamicResource DarkColor4Brush}"/>
                <Setter Property="Control.Foreground" Value="{DynamicResource LightColor1Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>