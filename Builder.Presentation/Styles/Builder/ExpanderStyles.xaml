<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared">
    <converters:ToUpperConverter x:Key="ToUpperConverter"/>
    <ControlTemplate x:Key="WhiteAnimatedExpanderTemplate" TargetType="{x:Type ToggleButton}">
        <Grid HorizontalAlignment="Stretch" Height="20"
          Width="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=ActualWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="3" Fill="Transparent" StrokeThickness="0"/>
            <Path x:Name="Arrow" Grid.Column="0" Fill="{DynamicResource HighlightBrush}" Width="10" Height="8"
            Margin="5" Stretch="Fill"
            Data="F1 M 37.8516,39.5833 L 52.1016,24.9375 52.1016,35.2292 37.8516,50.2708 23.6016,35.2292 23.6016,24.9375 37.8516,39.5833 Z"
            HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                    <RotateTransform Angle="90"/>
                </UIElement.RenderTransform>
            </Path>
            <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <TriggerBase.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                               Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0"
                               Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </TriggerBase.EnterActions>
                <TriggerBase.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                               Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="90"
                               Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </TriggerBase.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="WhiteExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="HeaderedContentControl.HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" FontWeight="SemiBold" FontSize="10"
                     Foreground="{DynamicResource HighlightBrush}"
                     Text="{Binding Converter={StaticResource ToUpperConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition x:Name="ContentRow" Height="0"/>
                        </Grid.RowDefinitions>
                        <Border Name="Border" Grid.Row="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton Template="{StaticResource WhiteAnimatedExpanderTemplate}" Margin="0" HorizontalAlignment="Right"
                              OverridesDefaultStyle="true" Grid.Column="2"
                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter Grid.Column="0" Margin="2,0" ContentSource="Header" RecognizesAccessKey="true"/>
                            </Grid>
                        </Border>
                        <Border Name="Content" Grid.Row="1" BorderThickness="0,0,0,0" BorderBrush="{DynamicResource GrayBrush5}">
                            <ContentPresenter Margin="0"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Expander.IsExpanded" Value="true">
                            <Setter TargetName="ContentRow" Value="{Binding ElementName=Content, Path=Height}"
                      Property="RowDefinition.Height"/>
                            <Setter TargetName="Border" Value="{StaticResource WhiteBrush}" Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="Expander.IsExpanded" Value="false">
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="0,0,0,0"/>
                            <Setter TargetName="Border" Property="Border.CornerRadius" Value="0"/>
                            <Setter TargetName="Content" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="DarkAnimatedExpanderTemplate" TargetType="{x:Type ToggleButton}">
        <Grid HorizontalAlignment="Stretch" Height="20"
          Width="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=ActualWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="3" Fill="Transparent" StrokeThickness="0"/>
            <Path x:Name="Arrow" Grid.Column="0" Fill="{DynamicResource GrayBrush5}" Width="10" Height="8" Margin="5"
            Stretch="Fill"
            Data="F1 M 37.8516,39.5833 L 52.1016,24.9375 52.1016,35.2292 37.8516,50.2708 23.6016,35.2292 23.6016,24.9375 37.8516,39.5833 Z"
            HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                    <RotateTransform Angle="0"/>
                </UIElement.RenderTransform>
            </Path>
            <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <TriggerBase.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                               Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="180"
                               Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </TriggerBase.EnterActions>
                <TriggerBase.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                               Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0"
                               Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </TriggerBase.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DarkExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="HeaderedContentControl.HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" FontWeight="SemiBold" FontSize="10"
                     Foreground="{DynamicResource GrayBrush5}"
                     Text="{Binding Converter={StaticResource ToUpperConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition x:Name="ContentRow" Height="0"/>
                        </Grid.RowDefinitions>
                        <Border Name="Border" Grid.Row="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton Template="{StaticResource DarkAnimatedExpanderTemplate}" Margin="0" HorizontalAlignment="Right"
                              OverridesDefaultStyle="true" Grid.Column="2"
                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter Grid.Column="0" Margin="2,0" ContentSource="Header" RecognizesAccessKey="true"/>
                            </Grid>
                        </Border>
                        <Border Name="Content" Grid.Row="1" BorderThickness="0,0,0,0" BorderBrush="{DynamicResource GrayBrush5}">
                            <ContentPresenter Margin="0"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Expander.IsExpanded" Value="true">
                            <Setter TargetName="ContentRow" Value="{Binding ElementName=Content, Path=Height}"
                      Property="RowDefinition.Height"/>
                            <Setter TargetName="Border" Value="{StaticResource WhiteBrush}" Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="Expander.IsExpanded" Value="false">
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="0,0,0,0"/>
                            <Setter TargetName="Border" Property="Border.CornerRadius" Value="0"/>
                            <Setter TargetName="Content" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>